<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <description>Spring MVC Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/mx.properties"/>
    <mvc:annotation-driven/>

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com.mx.view" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--&lt;!&ndash; REST中根据URL后缀自动判定Content-Type及相应的View &ndash;&gt;-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>

    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="jsonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>

    <mvc:interceptors>
        <bean class="com.mx.interceptor.LoginInterceptor"/>
    </mvc:interceptors>

    <!-- 视图文件解析配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 定义无Controller的path<->view直接映射 -->
    <!--<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>-->

    <!-- 拦截器配置 -->
    <!--<mvc:interceptors>-->
    <!--<bean class="com.ym.crm.modules.sys.interceptor.LogInterceptor" />-->
    <!--</mvc:interceptors>-->

    <!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">-->
    <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  -->
    <!--<property name="exceptionMappings">  -->
    <!--<props>  -->
    <!--<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>-->
    <!--</props>  -->
    <!--</property>  -->
    <!--</bean>  -->
    <!-- Shiro end -->

    <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/>
    </bean>
</beans>